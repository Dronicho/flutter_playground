/// Flutter icons ConstantMath
/// Copyright (C) 2021 by original authors @ fluttericon.com, fontello.com
/// This font was generated by FlutterIcon.com, which is derived from Fontello.
///
/// To use this font, place it in your fonts/ directory and include the
/// following in your pubspec.yaml
///
/// flutter:
///   fonts:
///    - family:  ConstantMath
///      fonts:
///       - asset: fonts/ConstantMath.ttf
///
/// 
///
import 'package:flutter/widgets.dart';

class ConstantMath {
  ConstantMath._();

  static const _kFontFam = 'ConstantMath';
  static const String? _kFontPkg = null;

  static const IconData redo = IconData(0xe800, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData undo = IconData(0xe801, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData zero = IconData(0xe802, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData one = IconData(0xe803, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData two = IconData(0xe804, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData three = IconData(0xe805, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData four = IconData(0xe806, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData five = IconData(0xe807, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData six = IconData(0xe808, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData seven = IconData(0xe809, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData eight = IconData(0xe80a, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData nine = IconData(0xe80b, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData delete = IconData(0xe80c, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData arrow_left = IconData(0xe80d, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData arrow_right = IconData(0xe80e, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData add = IconData(0xe80f, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData multiply = IconData(0xe810, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData divide = IconData(0xe811, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData subtract = IconData(0xe812, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData equal = IconData(0xe813, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData not_equal = IconData(0xe814, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData approximately_equal = IconData(0xe815, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData decimal = IconData(0xe816, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData comma = IconData(0xe817, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData shift = IconData(0xe819, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData shift_active = IconData(0xe81a, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData space = IconData(0xe81b, fontFamily: _kFontFam, fontPackage: _kFontPkg);
}