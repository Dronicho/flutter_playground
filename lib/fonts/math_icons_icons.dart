/// Flutter icons MathIcons
/// Copyright (C) 2021 by original authors @ fluttericon.com, fontello.com
/// This font was generated by FlutterIcon.com, which is derived from Fontello.
///
/// To use this font, place it in your fonts/ directory and include the
/// following in your pubspec.yaml
///
/// flutter:
///   fonts:
///    - family:  MathIcons
///      fonts:
///       - asset: fonts/MathIcons.ttf
///
/// 
///
import 'package:flutter/widgets.dart';

class MathIcons {
  MathIcons._();

  static const _kFontFam = 'MathIcons';
  static const String? _kFontPkg = null;

  static const IconData summation_sigma = IconData(0xe800, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData sigma_2 = IconData(0xe801, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData arrow = IconData(0xe802, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData exclamation = IconData(0xe803, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData log = IconData(0xe804, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData piecewise_6 = IconData(0xe805, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData piecewise_4 = IconData(0xe806, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData derivative = IconData(0xe807, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData double_derivative = IconData(0xe808, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData evaluation_2 = IconData(0xe809, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData function = IconData(0xe80a, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData undefined = IconData(0xe80b, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData does_not_exist = IconData(0xe80c, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData lim_pos = IconData(0xe80d, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData lim_neg = IconData(0xe80e, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData lim_condition = IconData(0xe80f, fontFamily: _kFontFam, fontPackage: _kFontPkg);
}